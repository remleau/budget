{"ast":null,"code":"var _jsxFileName = \"/Users/remygroleau/Documents/dev/remleau/budget/src/utils/GlobalProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState, useMemo, useCallback } from \"react\";\nimport PocketBase from \"pocketbase\";\nimport { useInterval } from \"usehooks-ts\";\nimport jwtDecode from \"jwt-decode\";\nimport ms from \"ms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://127.0.0.1:8090\";\nconst fiveMinutesInMs = ms(\"5 minutes\");\nconst twoMinutesInMs = ms(\"1 minutes\");\nexport const GlobalContext = /*#__PURE__*/createContext();\nexport const useGlobalContext = () => {\n  _s();\n  return useContext(GlobalContext);\n};\n_s(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const GlobalProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const pb = useMemo(() => new PocketBase(BASE_URL), []);\n  const [token, setToken] = useState(pb.authStore.token);\n  const [user, setUser] = useState(pb.authStore.model);\n  useEffect(() => {\n    return pb.authStore.onChange((token, model) => {\n      setToken(token);\n      setUser(model);\n    });\n    pb.beforeSend = function (url, options) {\n      // For list of the possible request options properties check\n      // https://developer.mozilla.org/en-US/docs/Web/API/fetch#options\n      options.headers = Object.assign({}, options.headers, {\n        \"X-Custom-Header\": \"example\"\n      });\n      return {\n        url,\n        options\n      };\n    };\n  }, []);\n  const register = useCallback(async (email, password) => {\n    return await pb.collection(\"users\").create({\n      email,\n      password,\n      passwordConfirm: password\n    });\n  }, []);\n  const login = useCallback(async (email, password) => {\n    return await pb.collection(\"users\").authWithPassword(email, password);\n  }, []);\n  const logout = useCallback(() => {\n    pb.authStore.clear();\n  }, []);\n  const update_user = useCallback(async values => {\n    return await pb.collection(\"users\").update(user.id, {\n      ...values\n    });\n  }, []);\n  const refreshSession = useCallback(async () => {\n    if (!pb.authStore.isValid) return;\n    const decoded = jwtDecode(token);\n    const tokenExpiration = decoded.exp;\n    const expirationWithBuffer = (decoded.exp + fiveMinutesInMs) / 1000;\n    if (tokenExpiration < expirationWithBuffer) {\n      await pb.collection(\"users\").authRefresh();\n    }\n  }, [token]);\n  useInterval(refreshSession, token ? twoMinutesInMs : null);\n  const value = {\n    register,\n    login,\n    logout,\n    user,\n    token,\n    pb,\n    update_user\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 3\n  }, this);\n};\n_s2(GlobalProvider, \"qUJ7T8v0Jo5aRvU90Kk21O6q0ms=\", false, function () {\n  return [useInterval];\n});\n_c = GlobalProvider;\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useMemo","useCallback","PocketBase","useInterval","jwtDecode","ms","jsxDEV","_jsxDEV","BASE_URL","fiveMinutesInMs","twoMinutesInMs","GlobalContext","useGlobalContext","_s","GlobalProvider","_ref","_s2","children","pb","token","setToken","authStore","user","setUser","model","onChange","beforeSend","url","options","headers","Object","assign","register","email","password","collection","create","passwordConfirm","login","authWithPassword","logout","clear","update_user","values","update","id","refreshSession","isValid","decoded","tokenExpiration","exp","expirationWithBuffer","authRefresh","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/remygroleau/Documents/dev/remleau/budget/src/utils/GlobalProvider.js"],"sourcesContent":["import {\n\tcreateContext,\n\tuseContext,\n\tuseEffect,\n\tuseState,\n\tuseMemo,\n\tuseCallback,\n} from \"react\";\nimport PocketBase from \"pocketbase\";\nimport { useInterval } from \"usehooks-ts\";\nimport jwtDecode from \"jwt-decode\";\nimport ms from \"ms\";\n\nconst BASE_URL = \"http://127.0.0.1:8090\";\nconst fiveMinutesInMs = ms(\"5 minutes\");\nconst twoMinutesInMs = ms(\"1 minutes\");\n\nexport const GlobalContext = createContext();\n\nexport const useGlobalContext = () => {\n\treturn useContext(GlobalContext);\n};\n\nexport const GlobalProvider = ({ children }) => {\n\tconst pb = useMemo(() => new PocketBase(BASE_URL), []);\n\n\tconst [token, setToken] = useState(pb.authStore.token);\n\tconst [user, setUser] = useState(pb.authStore.model);\n\n\tuseEffect(() => {\n\t\treturn pb.authStore.onChange((token, model) => {\n\t\t\tsetToken(token);\n\t\t\tsetUser(model);\n\t\t});\n\n\t\tpb.beforeSend = function (url, options) {\n\t\t\t// For list of the possible request options properties check\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/fetch#options\n\t\t\toptions.headers = Object.assign({}, options.headers, {\n\t\t\t\t\"X-Custom-Header\": \"example\",\n\t\t\t});\n\n\t\t\treturn { url, options };\n\t\t};\n\t}, []);\n\n\tconst register = useCallback(async (email, password) => {\n\t\treturn await pb\n\t\t\t.collection(\"users\")\n\t\t\t.create({ email, password, passwordConfirm: password });\n\t}, []);\n\n\tconst login = useCallback(async (email, password) => {\n\t\treturn await pb.collection(\"users\").authWithPassword(email, password);\n\t}, []);\n\n\tconst logout = useCallback(() => {\n\t\tpb.authStore.clear();\n\t}, []);\n\n\tconst update_user = useCallback(async (values) => {\n\t\treturn await pb.collection(\"users\").update(user.id, {\n\t\t\t...values,\n\t\t});\n\t}, []);\n\n\tconst refreshSession = useCallback(async () => {\n\t\tif (!pb.authStore.isValid) return;\n\t\tconst decoded = jwtDecode(token);\n\t\tconst tokenExpiration = decoded.exp;\n\t\tconst expirationWithBuffer = (decoded.exp + fiveMinutesInMs) / 1000;\n\n\t\tif (tokenExpiration < expirationWithBuffer) {\n\t\t\tawait pb.collection(\"users\").authRefresh();\n\t\t}\n\t}, [token]);\n\n\tuseInterval(refreshSession, token ? twoMinutesInMs : null);\n\n\tconst value = {\n\t\tregister,\n\t\tlogin,\n\t\tlogout,\n\t\tuser,\n\t\ttoken,\n\t\tpb,\n\t\tupdate_user,\n\t};\n\n\treturn (\n\t\t<GlobalContext.Provider value={value}>{children}</GlobalContext.Provider>\n\t);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}