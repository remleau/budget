{"ast":null,"code":"var _jsxFileName = \"/Users/remygroleau/Documents/dev/remleau/budget/src/hooks/useNotifications.js\",\n  _s = $RefreshSig$();\nimport { useMemo, useCallback, useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { ROUTES } from \"../utils/Routes\";\nimport { useGlobalContext } from \"../utils/GlobalProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useNotifications() {\n  _s();\n  const {\n    pb\n  } = useGlobalContext();\n  const [method, setMethod] = useState(null);\n  const [notifications, setNotifications] = useState(null);\n  useEffect(() => {\n    pb.beforeSend = function (url, options) {\n      setNotifications(null);\n      setMethod(options.method);\n      console.log(notifications);\n      return {\n        url,\n        options\n      };\n    };\n    pb.afterSend = function (response, data) {\n      if (response.status !== 200) return response;\n      console.log(method, data);\n      switch (data === null || data === void 0 ? void 0 : data.collectionName) {\n        case \"categories\":\n          setNotifications(() => /*#__PURE__*/_jsxDEV(NavLink, {\n            to: ROUTES.CATEGORIE.replace(\":id\", data === null || data === void 0 ? void 0 : data.id.toString()),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Categorie \", data === null || data === void 0 ? void 0 : data.name, \" added\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 7\n          }, this));\n          break;\n        case \"users\":\n          //if (method === \"PATCH\")\n          setNotifications(() => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Updated account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this));\n          break;\n        default:\n          break;\n      }\n      return data;\n    };\n  }, [method, notifications]);\n  return useMemo(() => {\n    return notifications;\n  });\n}\n_s(useNotifications, \"LP12fhjIolZVvsYuSSFHvQKE59Y=\", false, function () {\n  return [useGlobalContext];\n});\nexport default useNotifications;","map":{"version":3,"names":["useMemo","useCallback","useState","useEffect","NavLink","ROUTES","useGlobalContext","jsxDEV","_jsxDEV","useNotifications","_s","pb","method","setMethod","notifications","setNotifications","beforeSend","url","options","console","log","afterSend","response","data","status","collectionName","to","CATEGORIE","replace","id","toString","children","name","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/remygroleau/Documents/dev/remleau/budget/src/hooks/useNotifications.js"],"sourcesContent":["import { useMemo, useCallback, useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { ROUTES } from \"../utils/Routes\";\nimport { useGlobalContext } from \"../utils/GlobalProvider\";\n\nfunction useNotifications() {\n\tconst { pb } = useGlobalContext();\n\n\tconst [method, setMethod] = useState(null);\n\tconst [notifications, setNotifications] = useState(null);\n\n\tuseEffect(() => {\n\t\tpb.beforeSend = function (url, options) {\n\t\t\tsetNotifications(null);\n\t\t\tsetMethod(options.method);\n\t\t\tconsole.log(notifications);\n\t\t\treturn { url, options };\n\t\t};\n\n\t\tpb.afterSend = function (response, data) {\n\t\t\tif (response.status !== 200) return response;\n\n\t\t\tconsole.log(method, data);\n\n\t\t\tswitch (data?.collectionName) {\n\t\t\t\tcase \"categories\":\n\t\t\t\t\tsetNotifications(() => (\n\t\t\t\t\t\t<NavLink to={ROUTES.CATEGORIE.replace(\":id\", data?.id.toString())}>\n\t\t\t\t\t\t\t<div>Categorie {data?.name} added</div>\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"users\":\n\t\t\t\t\t//if (method === \"PATCH\")\n\t\t\t\t\tsetNotifications(() => <div>Updated account</div>);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\t}, [method, notifications]);\n\n\treturn useMemo(() => {\n\t\treturn notifications;\n\t});\n}\n\nexport default useNotifications;\n"],"mappings":";;AAAA,SAASA,OAAO,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,OAAO,QAAQ,kBAAkB;AAE1C,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,gBAAgB,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAG,CAAC,GAAGL,gBAAgB,EAAE;EAEjC,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAM;IACfQ,EAAE,CAACK,UAAU,GAAG,UAAUC,GAAG,EAAEC,OAAO,EAAE;MACvCH,gBAAgB,CAAC,IAAI,CAAC;MACtBF,SAAS,CAACK,OAAO,CAACN,MAAM,CAAC;MACzBO,OAAO,CAACC,GAAG,CAACN,aAAa,CAAC;MAC1B,OAAO;QAAEG,GAAG;QAAEC;MAAQ,CAAC;IACxB,CAAC;IAEDP,EAAE,CAACU,SAAS,GAAG,UAAUC,QAAQ,EAAEC,IAAI,EAAE;MACxC,IAAID,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE,OAAOF,QAAQ;MAE5CH,OAAO,CAACC,GAAG,CAACR,MAAM,EAAEW,IAAI,CAAC;MAEzB,QAAQA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,cAAc;QAC3B,KAAK,YAAY;UAChBV,gBAAgB,CAAC,mBAChBP,OAAA,CAACJ,OAAO;YAACsB,EAAE,EAAErB,MAAM,CAACsB,SAAS,CAACC,OAAO,CAAC,KAAK,EAAEL,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,EAAE,CAACC,QAAQ,EAAE,CAAE;YAAAC,QAAA,eACjEvB,OAAA;cAAAuB,QAAA,GAAK,YAAU,EAACR,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAES,IAAI,EAAC,QAAM;YAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAM;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAExC,CAAC;UACF;QACD,KAAK,OAAO;UACX;UACArB,gBAAgB,CAAC,mBAAMP,OAAA;YAAAuB,QAAA,EAAK;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,CAAC;UAClD;QAED;UACC;MAAM;MAGR,OAAOb,IAAI;IACZ,CAAC;EACF,CAAC,EAAE,CAACX,MAAM,EAAEE,aAAa,CAAC,CAAC;EAE3B,OAAOd,OAAO,CAAC,MAAM;IACpB,OAAOc,aAAa;EACrB,CAAC,CAAC;AACH;AAACJ,EAAA,CA3CQD,gBAAgB;EAAA,QACTH,gBAAgB;AAAA;AA4ChC,eAAeG,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}